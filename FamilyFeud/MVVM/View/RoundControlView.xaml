<UserControl x:Class="FamilyFeud.MVVM.View.RoundControlView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FamilyFeud" 
        xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
        xmlns:viewmodel="clr-namespace:FamilyFeud.MVVM.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        d:DataContext="{d:DesignInstance Type=viewmodel:MainWindowViewModel}"
        mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="10*"></RowDefinition>
            <RowDefinition Height="3*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <RadioButton Grid.Row ="1" Grid.Column ="0" Margin="20 0 20 20" VerticalAlignment="Top" Style ="{StaticResource {x:Type ToggleButton}}" MinHeight="20" MinWidth="20" HorizontalAlignment="Center" Content ="{Binding ActiveGame.FirstTeam.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" GroupName="IsAnswering" IsChecked="{Binding IsFirstTeamAnswering, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <RadioButton Grid.Row ="1" Grid.Column ="2" VerticalAlignment="Top" Margin="20 0 20 20" Style ="{StaticResource {x:Type ToggleButton}}" HorizontalAlignment="Center" Content ="{Binding ActiveGame.SecondTeam.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" GroupName="IsAnswering" IsChecked="{Binding IsSecondTeamAnswering, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <StackPanel Grid.Row="1" Grid.Column="1">
            <Label Content="{Binding CurrentQuestion.QuestionString}"></Label>
            <ListBox ItemsSource="{Binding AnswersObjectCollection, UpdateSourceTrigger=PropertyChanged}" 
                     SelectedItem="{Binding CurrentAnswer, Mode=TwoWay}" 
                     Background="Transparent"
                     MinHeight="40">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction
                            Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.OnAnswerClickCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.CurrentAnswer}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock VerticalAlignment="Stretch"
                                   IsHitTestVisible="True"
                                   HorizontalAlignment="Stretch"
                                   Text="{Binding AnswerString}"
                                   Background="Transparent">
                        </TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <ui:Button VerticalAlignment="Bottom" x:Name="WrongAnswer" Content="Wrong Answer" Command="{Binding OnWrongAnswerClickCommand}"/>
            <ui:Button VerticalAlignment="Bottom" x:Name="NextRound" Content="Next round" Command="{Binding OnNextRoundClickCommand}"/>
            <ui:Button VerticalAlignment="Bottom" x:Name="PrevRound" Content="Prev round" Command="{Binding OnPrevRoundClickCommand}"/>
            <ui:Button VerticalAlignment="Bottom" x:Name="ResetWrongImages" Content="Reset wrong answers" Command="{Binding OnWrongResetClickCommand}"/>
            <ui:Button VerticalAlignment="Bottom" x:Name="AssignPoints" Content="Assign points" Command="{Binding OnAssignPointsClickCommand}"/>
            <ui:ToggleSwitch Content="1 vs 1" IsChecked="{Binding OneOnOne, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></ui:ToggleSwitch>
            <ui:ToggleSwitch Content="IsReusable" IsChecked="{Binding ActiveGame.GameRounds[this].RoundQuestion.IsReusable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <ui:Button VerticalAlignment="Bottom" x:Name="FinishGame" Content="Finish game" Command="{Binding OnFinishGameCommand}"/>
            <ui:Button VerticalAlignment="Bottom" x:Name="ReplaceQuestion" Content="Replace question" Command="{Binding OnSkipQuestionClickCommand}"/>

        </StackPanel>
    </Grid>
</UserControl>
